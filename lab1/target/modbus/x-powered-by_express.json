{"asn": "AS14061", "hash": -808019154, "os": null, "tags": ["cloud"], "timestamp": "2022-10-17T04:46:08.048297", "isp": "DigitalOcean, LLC", "transport": "tcp", "_shodan": {"region": "eu", "ptr": true, "module": "https-simple-new", "id": "ff056dfc-cc95-4f39-8521-8f14c047e164", "options": {}, "crawler": "78039f81a0245caa8ab71c98182f0eff0ce52aab"}, "cloud": {"region": "in-ka", "service": null, "provider": "DigitalOcean"}, "hostnames": [], "location": {"city": "Doddaballapura", "region_code": "KA", "area_code": null, "longitude": 77.575, "latitude": 13.2257, "country_code": "IN", "country_name": "India"}, "ip": 2671876022, "domains": [], "org": "DigitalOcean, LLC", "data": "HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Thu, 13 Oct 2022 04:05:32 GMT\r\nETag: W/\"ba1f-183cf84d626\"\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 47647\r\nVary: Accept-Encoding\r\nDate: Mon, 17 Oct 2022 04:46:07 GMT\r\nConnection: keep-alive\r\n\r\n<!-- <!doctype html>\r\n<html>\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n        <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\">\r\n        <title>A smart way to connect, control and monitor the industrial assets from remote - Prismworks</title>\r\n        <link rel=\"shortcut icon\" href=\"https://www.daacoworks.com/webcontents/assets/site/images/fav.png\" />\r\n        <meta name=\"robots\" content=\"index, follow\" />\r\n        <meta name=\"description\" content=\"Prismworks is a cloud-based IIoT service for System Integrators, Maintenance Team, and Original Eqpuipment Manufacturers.\" />\r\n        <meta name=\"keywords\" content=\"IoT, IIoT, industry protocols, Industry 4.0, Modbus, BACnet/IP, S7, Ethernet, PLC, SCADA, industrial automation, Edge software, EtherNet/IP, Profinet, remote monitoring, remote access, remote commissioning, FINS, Melsec\" />\r\n        <script src=\"https://code.jquery.com/jquery-3.3.1.min.js\"></script>\r\n        <script src='./webcontents/assets/site/js/main.js'></script>\r\n        <link href=\"https://fonts.googleapis.com/css?family=Nunito\" rel=\"stylesheet\">\r\n        <link type=\"text/css\" href=\"https://cdn.jsdelivr.net/fontawesome/4.1.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n        <link href=\"./webcontents/assets/site/css/style.css\" rel=\"stylesheet\" />\r\n        <link href=\"./webcontents/assets/site/css/new.css\" rel=\"stylesheet\" />\r\n        <link href=\"style.css\" rel=\"stylesheet\" />\r\n        <link href=\"https://www.landmarkmlp.com/js-plugin/owl.carousel/owl-carousel/owl.carousel.css\" rel=\"stylesheet\" />\r\n        <script src=\"./webcontents/owl.carousel.min.js\" type=\"text/javascript\"></script>\r", "port": 9091, "opts": {}, "ip_str": "159.65.151.182"}
{"asn": "AS396982", "hash": -1106386980, "os": null, "tags": ["cloud"], "timestamp": "2022-10-15T07:03:02.475266", "isp": "Google LLC", "transport": "tcp", "_shodan": {"region": "eu", "ptr": true, "module": "https-simple-new", "id": "ab2aa61e-21fb-4e47-ab03-88f167be7338", "options": {}, "crawler": "bf213bc419cc8491376c12af31e32623c1b6f467"}, "cloud": {"region": "asia-southeast1", "service": null, "provider": "Google"}, "hostnames": ["18.226.240.35.bc.googleusercontent.com"], "location": {"city": "Singapore", "region_code": "01", "area_code": null, "longitude": 103.85007, "latitude": 1.28967, "country_code": "SG", "country_name": "Singapore"}, "ip": 602989074, "domains": ["googleusercontent.com"], "org": "Google LLC", "data": "HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Wed, 11 Nov 2020 02:35:32 GMT\r\nETag: W/\"6c74-175b528846e\"\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 27764\r\nDate: Sat, 15 Oct 2022 07:03:02 GMT\r\nConnection: keep-alive\r\n\r\n<!DOCTYPE HTML>\n<html>\n<head>\n  <title>MODBUS RTU ONLINE - Prevalink.com</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=yes\">\n  <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n  <link rel=\"stylesheet\" href=\"src/css/w3.css\">\n  <link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n\n  <!-- Bootstrap core CSS -->\n  <!--link href=\"./src/css/bootstrap.min.css\" rel=\"stylesheet\"-->\n  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.0/animate.min.css\" rel=\"stylesheet\">\n  <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n<style>\n/* Load San francisco font from apple  */\n      @font-face {\n        font-family: \"San Francisco Display Ultralight\";\n        font-style: normal;\n        src: url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.eot?#iefix) format(\"embedded-opentype\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.woff2) format(\"woff2\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.woff) format(\"woff\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.ttf) format(\"truetype\"), url(\"fonts/sanfrancisco/sanfranciscodisplay-ultralight-webfont.svg#San Francisco Display Ultralight\") format(\"svg\")\n      }\n\n      @font-face {\n        font-family: \"San Francisco Display Thin\";\n        font-style: normal;\n        src: url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.eot?#iefix) format(\"embedded-opentype\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.woff2) format(\"woff2\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.woff) format(\"woff\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.ttf) format(\"truetype\"), url(\"fonts/sanfrancisco/sanfranciscodisplay-thin-webfont.svg#San Francisco Display Thin\") format(\"svg\")\n      }\n\n      @font-face {\n        font-family: \"San Francisco Display Medium\";\n        font-style: normal;\n        src: url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-medium-webfont.eot?#iefix) format(\"embedded-opentype\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-medium-webfont.woff2) format(\"woff2\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-medium-webfont.woff) format(\"woff\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-medium-webfont.ttf) format(\"truetype\"), url(\"fonts/sanfrancisco/sanfranciscodisplay-medium-webfont.svg#San Francisco Display Medium\") format(\"svg\")\n      }\n\n      @font-face {\n        font-family: \"San Francisco Display Semibold\";\n        font-style: normal;\n        src: url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-semibold-webfont.eot?#iefix) format(\"embedded-opentype\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-semibold-webfont.woff2) format(\"woff2\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-semibold-webfont.woff) format(\"woff\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-semibold-webfont.ttf) format(\"truetype\"), url(\"fonts/sanfrancisco/sanfranciscodisplay-semibold-webfont.svg#San Francisco Display Semibold\") format(\"svg\")\n      }\n\n      @font-face {\n        font-family: \"San Francisco Display Bold\";\n        font-style: normal;\n        src: url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-bold-webfont.eot?#iefix) format(\"embedded-opentype\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-bold-webfont.woff2) format(\"woff2\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-bold-webfont.woff) format(\"woff\"), url(https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-bold-webfont.ttf) format(\"truetype\"), url(\"fonts/sanfrancisco/sanfranciscodisplay-bold-webfont.svg#San Francisco Display Bold\") format(\"svg\")\n      }\n  body{\n    background-color: #515151;\n    color: #ccc;", "port": 5001, "opts": {}, "ip_str": "35.240.226.18"}
{"asn": "AS37963", "hash": -1854793135, "os": null, "timestamp": "2022-10-09T13:39:26.103134", "isp": "Hangzhou Alibaba Advertising Co.,Ltd.", "transport": "tcp", "_shodan": {"region": "eu", "ptr": true, "module": "https-simple-new", "id": "f534501d-02b0-45e1-9d2a-4f2e0878205a", "options": {}, "crawler": "dfd12d70c30ccb3812bf26f89905deeb85e98c77"}, "hostnames": [], "location": {"city": "Beijing", "region_code": "BJ", "area_code": null, "longitude": 116.39723, "latitude": 39.9075, "country_code": "CN", "country_name": "China"}, "ip": 660863683, "domains": [], "org": "Aliyun Computing Co., LTD", "data": "HTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Thu, 11 Aug 2022 08:47:24 GMT\r\nETag: W/\"12dc-1828c163da2\"\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 4828\r\nDate: Sun, 09 Oct 2022 13:39:25 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\r\n    <link rel=\"icon\" href=\"<%= BASE_URL %>favicon.ico\">\r\n    <title><%= htmlWebpackPlugin.options.title %></title>\r\n    <style type=\"text/css\">\r\n      body,html {\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n      .el-popover.cu-popper{\r\n  background:#090d29;\r\n  border-color:#146ebd;\r\n}\r\n.cu-popper .el-popper__title{\r\n  color:white\r\n}\r\n .cu-popper p{\r\n  color:white\r\n}\r\n .cu-popper .popper__arrow::after{\r\n  border-right-color:#090d29 !important;\r\n}\r\n    </style>\r\n    <script type=\"text/javascript\">\r\n      let total = 0\r\n      let off = 0\r\n      let fault = 0\r\n      let deviceStatus1 = []\r\n      let waring = []\r\n      let detailwaring = []\r\n      let faults = []\r\n      let alarmsFlag = false\r\n      let faultsFlag = false\r\n      let ws = new WebSocket('ws://39.99.250.195:8082/v1/api/ws')\r\n      ws.onmessage = (event) => {\r\n        if (JSON.parse(event.data).protoCode === 'alarms') {\r\n          // waring = JSON.parse(event.data).data.alarms\r\n          if (JSON.parse(event.data).data.alarms.length > 0) {\r\n            for (let i = 0; i < JSON.parse(event.data).data.alarms.length; i++) {\r\n              waring.push(JSON.parse(event.data).data.alarms[i])\r\n            }\r\n            // console.log('waring')\r\n            // console.log(waring)\r\n            detailwaring = JSON.parse(JSON.stringify(waring))\r\n          } else {\r\n            waring = []\r\n            detailwaring = []\r\n          }\r\n          \r\n        } else if (JSON.parse(event.data).protoCode === 'alarms-state-push') {\r\n          if (JSON.parse(event.data).data.alarms_state == 1) {\r\n            alarmsFlag = true\r\n          }\r\n        } else if (JSON.parse(event.data).protoCode === 'device-states-push') {\r\n          const arr = JSON.parse(event.data).data.device_states\r\n          const commonList = Array.from(JSON.parse(sessionStorage.getItem('device')).filter(item => item.category === 'COMMON'),({id}) => id);\r\n          const modbusArr = JSON.parse(sessionStorage.getItem('device')).filter(item => item.category === 'MODBUS#1')\r\n          const modbusList = JSON.parse(sessionStorage.getItem('modbusChannel'))\r\n          const Arr = []\r\n          for (let k = 0; k < commonList.length; k ++) {\r\n            Arr.push(commonList[k])\r\n          }\r\n          let deviceArr = Array.from(new Set(Arr))\r\n          let qxList = []\r\n          for (let p = 0; p < arr.length; p++) {\r\n            if (deviceArr.includes(arr[p].device_id)) {\r\n              qxList.push(arr[p])\r\n            }\r\n          }\r\n          let modbusDeviceQx = []\r\n          for (let a = 0; a < modbusList.length; a++) {\r\n            modbusDeviceQx.push(modbusList[a])\r\n          }\r\n          let modbusQxArr = []\r\n          for (let i = 0; i < modbusArr.length; i++) {\r\n            modbusQxArr.push(modbusArr[i].id)\r\n          }\r\n          const aaa = []\r\n          for (let c = 0; c < arr.length; c++) {\r\n            if (modbusQxArr.includes(arr[c].device_id)) {\r\n              aaa.push(arr[c])\r\n            }\r\n          }\r\n          for (let d = 0; d < aaa.length; d++) {\r\n            for (let e = 0; e < aaa[d].channel_states.length; e++) {\r\n              if (modbusDeviceQx.includes(aaa[d].channel_states[e].channel_id)) {\r\n                total += 1\r\n                if (aaa[d].channel_states[e].state == 0) {\r\n                  off += 1\r\n                }\r\n              }\r\n            }\r\n          }\r\n          for (let q = 0; q < qxList.length; q++) {\r\n            total += 1\r\n            if (qxList[q].state == 0) {\r\n              off += 1\r\n            }\r\n          }\r\n          deviceStatus1 = []\r\n          deviceStatus1.push(\r\n            { value: off, name: '\u79bb\u7ebf' },\r\n            { value: total - off, name: '\u6b63\u5e38' }\r\n          )\r\n        } else if (JSON.parse(event.data).protoCode === 'faults-state-push') {\r\n          if (JSON.parse(event.data).data.faults_state == 1) {\r\n            faultsFlag = true\r\n          }\r\n        } else if (JSON.parse(event.data).protoCode === 'faults') {\r\n          if (JSON.parse(event.data).data.faults.length > 0) {\r\n            for (let i = 0; i < JSON.parse(event.data).data.faults.length; i++) {\r\n              faults.push(JSON.parse(event.data).data.faults[i])\r\n            }\r\n          } else {\r\n            faults = []\r\n          }\r\n        }\r\n      }\r\n    </script>\r\n  </head>\r\n  <body style=\"overflow-x: hidden;\">\r\n    <noscript>\r\n      <strong>We're sorry but <%= htmlWebpackPlugin.options.title %> doesn't work properly without JavaScript enabled. Please enable it to continue.</strong>\r\n    </noscript>\r\n    <div id=\"app\"></div>\r\n    <!-- built files will be auto injected", "port": 8083, "opts": {}, "ip_str": "39.99.250.195"}